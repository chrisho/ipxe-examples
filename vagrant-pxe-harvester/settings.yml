---
##########################################################################
# NOTE: this is a YAML file so please pay close attention to the leading #
# spaces as they are significant.                                        #
##########################################################################

#
# harvester_iso_url
# harvester_kernel_url
# harvester_initrd_url
#
# Harvester media to install. The URL scheme can be either 'http', 'https', or
# 'file'. If the URL scheme is 'file', the given media will be copied from the
# local file system instead of downloading from a remote location.
harvester_iso_url: http://192.168.31.160/harvester/harvester-master-amd64.iso
harvester_kernel_url: http://192.168.31.160/harvester/harvester-master-vmlinuz-amd64
harvester_ramdisk_url: http://192.168.31.160/harvester/harvester-master-initrd-amd64
harvester_rootfs_url: http://192.168.31.160/harvester/harvester-master-rootfs-amd64.squashfs

#
# harvester_cluster_nodes
#
# NOTE: keep in mind that you need at least 3 nodes to make a cluster
#
harvester_cluster_nodes: 2

#
# network_config
#
# Harvester network configurations. Make sure the cluster IPs are on the same
# subnet as the DHCP server. Pre-assign the IPs and MACs for the Harvester
# nodes.
#
# NOTE: Random MAC addresses are generated with the following command:
# printf '02:00:00:%02X:%02X:%02X\n' $((RANDOM%256)) $((RANDOM%256)) $((RANDOM%256))
# Thanks to https://stackoverflow.com/questions/8484877/mac-address-generator-in-python
# If any of the generated MAC addresses is in conflict with an existing one in
# your environment, please use the above command to regenerate and replace
# the conflicting one.
#
harvester_network_config:
  # Run as an airgapped environment that only has internet connectivity through an HTTP proxy.
  # The HTTP proxy runs on DHCP server using port 3128
  offline: false

  dhcp_server:
    ip: 10.2.0.100
    subnet: 10.2.0.0
    netmask: 255.255.255.0
    range: 10.2.0.128 10.2.0.254
    https: false
  # Reserve these IPs for the Harvester cluster. Make sure these are outside
  # the range of DHCP so they don't get served out by the DHCP server
  vip:
    ip: 192.168.31.159
    mode: static
    mac: 02:00:00:03:3D:61
  cluster:
    - ip: 10.2.0.161
      mac: 02:00:00:0D:62:E2
      cpu: 24
      memory: 24576
      disk_size: 300G
      vagrant_interface: ens5
      mgmt_interface: ens6
      public_ip: 192.168.31.161
      public_interface: ens7
    - ip: 10.2.0.162
      mac: 02:00:00:35:86:92
      cpu: 16
      memory: 16384
      disk_size: 150G
      vagrant_interface: ens5
      mgmt_interface: ens6
      public_ip: 192.168.31.162
      public_interface: ens7
#    - ip: 10.2.0.163
#      mac: 02:00:00:2F:F2:2A
#      cpu: 8
#      memory: 16384
#      disk_size: 150G
#      vagrant_interface: ens5
#      mgmt_interface: ens6

#
# harvester_config
#
# Harvester system configurations.
#
harvester_config:
  # static token for cluster authentication
  token: token

  # Public keys to add to authorized_keys of each node.
  ssh_authorized_keys:
    # Vagrant default unsecured SSH public key
    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDDKlw9sGVxc+FW0bWS1JAw1OmSQd4gx5P0qNFLvgWCoAX9jvqlKqAXlp0kHNwmRykYfs37aSuTZg9OYUYRAwDT9jlYXv8L6KYqjJtrooOgiArY+8LJYSNhEMZAalMo/lLyKwlVF3s/pmESqACJweQjrMipSEAEpkBqQOtTkvEOiYhD9tcIR6cRzwUFtvZwOgzdQ0os0pO3kCaYm74/RMPnRXmK8o08G7RCpgQB2qWKX/AE/jUod+0uDX43xbCG/G+NZpngPu+gIkRKFZjg6I2IAF8Nj7XEkoHCtvNIWWPeFE0gK2EClM8ml/PnFvMMiv8rT+e6dGwAoscutNnju/9/ chris@chrisdeMacBook-Pro.local

  # password to for the `rancher` user to login to the Harvester nodes
  password: root

  # NTP servers
  ntp_servers:
    - 0.suse.pool.ntp.org
    - 1.suse.pool.ntp.org

#
# harvester_node_config
#
# Harvester node-specific configurations.
#
harvester_node_config:
  # number of CPUs assigned to each node
  cpu: 4

  # memory size for each node, in MBytes
  memory: 8192

  # disk size for each node
  disk_size: 100G
